DROP TABLE IF EXISTS TRANSACTIONS;
DROP TABLE IF EXISTS BALANCE_HISTORY;
DROP TABLE IF EXISTS BANKACCOUNT;
DROP TABLE IF EXISTS CATEGORY;
DROP TABLE IF EXISTS USERS;

COMMIT;

CREATE TABLE PUBLIC.CATEGORY (
	ID INTEGER IDENTITY PRIMARY KEY,
	NAME VARCHAR(50) NOT NULL,
);

COMMIT;

CREATE UNIQUE INDEX CATEGORY_NAME_IDX ON PUBLIC.CATEGORY (NAME);

CREATE UNIQUE INDEX SYS_IDX_CATEGORY_PK_10126 ON PUBLIC.CATEGORY (ID);

COMMIT;

CREATE TABLE PUBLIC.USERS (
	ID INTEGER IDENTITY PRIMARY KEY,
	NAME VARCHAR(100) NOT NULL,
	SURNAME VARCHAR(100) NOT NULL,
);

COMMIT;

CREATE UNIQUE INDEX SYS_IDX_USERS_PK_10120 ON PUBLIC.USERS (ID);

COMMIT;

CREATE TABLE PUBLIC.BANKACCOUNT (
	ID INTEGER IDENTITY PRIMARY KEY,
	NAME VARCHAR(100) NOT NULL,
	BANKNAME VARCHAR(100) NOT NULL,
	IBAN VARCHAR(100) NOT NULL,
	BIC VARCHAR(100) NOT NULL,
	USER_ID INTEGER NOT NULL,
	CONSTRAINT BANKACCOUNT_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(ID)
);

COMMIT;

CREATE INDEX SYS_IDX_10141 ON PUBLIC.BANKACCOUNT (USER_ID);

CREATE UNIQUE INDEX SYS_IDX_BANKACCOUNT_PK_10097 ON PUBLIC.BANKACCOUNT (ID);

COMMIT;

CREATE TABLE PUBLIC.TRANSACTIONS (
	ID INTEGER IDENTITY PRIMARY KEY,
	NAME VARCHAR(100) NOT NULL,
	BANKACCOUNT_ID INTEGER,
	USER_ID INTEGER,
	CATEGORY_ID INTEGER NOT NULL,
	"DATE" DATE NOT NULL,
	"TIMESTAMP" TIMESTAMP NOT NULL,
	CONSTRAINT TRANSACTIONS_BANKACCOUNT_FK FOREIGN KEY (BANKACCOUNT_ID) REFERENCES PUBLIC.BANKACCOUNT(ID),
	CONSTRAINT TRANSACTIONS_CATEGORY_FK FOREIGN KEY (CATEGORY_ID) REFERENCES PUBLIC.CATEGORY(ID),
	CONSTRAINT TRANSACTIONS_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(ID)
);

COMMIT;

CREATE INDEX SYS_IDX_10249 ON PUBLIC.TRANSACTIONS (BANKACCOUNT_ID);

CREATE INDEX SYS_IDX_10251 ON PUBLIC.TRANSACTIONS (CATEGORY_ID);

CREATE INDEX SYS_IDX_10253 ON PUBLIC.TRANSACTIONS (USER_ID);

CREATE UNIQUE INDEX SYS_IDX_TRANSACTIONS_PK_10243 ON PUBLIC.TRANSACTIONS (ID);

COMMIT;

CREATE TABLE PUBLIC.BALANCE_HISTORY (
	ID INTEGER IDENTITY PRIMARY KEY,
	"DATE" DATE NOT NULL,
	BANKACCOUNT_ID INTEGER NOT NULL,
	BALANCE DOUBLE NOT NULL,
	CONSTRAINT BALANCE_HISTORY_BANKACCOUNT_FK FOREIGN KEY (BANKACCOUNT_ID) REFERENCES PUBLIC.BANKACCOUNT(ID)
);

COMMIT;

CREATE UNIQUE INDEX BALANCE_HISTORY_BANKACCOUNT_ID_IDX ON PUBLIC.BALANCE_HISTORY (BANKACCOUNT_ID,DATE);

CREATE INDEX SYS_IDX_10138 ON PUBLIC.BALANCE_HISTORY (BANKACCOUNT_ID);

CREATE UNIQUE INDEX SYS_IDX_BALANCE_HISTORY_PK_10133 ON PUBLIC.BALANCE_HISTORY (ID);

COMMIT;
